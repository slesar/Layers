apply plugin: 'com.android.library'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion project.property("compileSdkVersion").toInteger()
    buildToolsVersion project.property("buildToolsVersion")

    defaultConfig {
        minSdkVersion project.property("minSdkVersion")
        targetSdkVersion project.property("targetSdkVersion")
    }

    buildTypes {
        release {

        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

unMock {
    keep "android.os.Bundle"
    keep "android.os.Parcelable"
    keep "android.util.SparseArray"
    keep "com.android.internal.util.ArrayUtils"
}

dependencies {
    // Kotlin lib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:1+"
    implementation "androidx.lifecycle:lifecycle-common:2+"

    // Tests
    unmock "org.robolectric:android-all:$unMockRobolectricVersion"
    testImplementation "androidx.arch.core:core-testing:2+"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    getArchiveClassifier().set('javadoc')
    getArchiveBaseName().set('layers')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    getArchiveClassifier().set('sources')
    getArchiveBaseName().set('layers')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
//    archives packageReleaseJar
    archives androidSourcesJar
    archives androidJavadocsJar
}
